#user  nobody;
worker_processes  1;
pid /usr/local/var/run/openresty.pid;

error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location /lua {
            default_type 'text/plain';

            content_by_lua_block {
                local cjson = require "cjson"
                local t = {}
                local names = {}
                
                ngx.req.read_body()
                
                local args, err = ngx.var.request_body
                local js = cjson.new().decode(args)
                
                for k, v in pairs(js['leg']['items']) do
                    table.insert(names, v)
                end

                local check = {'fl', 'bl', 'fr'}
                local invalid, dupe = false, false

                -- CHECKING FOR INVALID NAMES

                for k, v in pairs(names) do
                    for k1, v1 in pairs(check) do
                        if v1 == v then
                            invalid = false
                            break
                        else
                            invalid = true
                        end
                    end
                    if invalid == true then break end
                  end
                
                -- CHECKING FOR DUPLICATES
                for i = 1,#names do
                    local c = 0
                    for j = 1, #names do
                        if names[i] == names[j] then c = c + 1 end
                    end
                    if c > 1 then dupe = true end
                end
                if invalid == true then ngx.say(cjson.encode('{"status": "unknown item found"}')) end
                if dupe then ngx.say(cjson.encode('{"status": "duplicate value detected"}')) end
            }


            root   html;
            index  index.html index.htm;
        }
    }
}
